@model Dialog.Behoerdenloesung.Sitzungen.UI.Web.Models.TraktandumViewModel
@using System.Web.UI.WebControls
@using Dialog.Behoerdenloesung.Sitzungen.UI.Web.Helpers 

@using DevExpress.Web.Mvc
@using DevExpress.Web.Mvc.UI
@using DevExpress.Web.ASPxHtmlEditor
@using Dialog.Behoerdenloesung.Sitzungen.UI.Web.Models

@{
    ViewBag.Title = "Traktandum";
    var _VD_ = System.Configuration.ConfigurationManager.AppSettings["vd"];
}

<div class="row" style="margin-top: 20px">
    <div class="col-md-10">
        <input type="hidden" id="traktandId" value="@(Model.Traktand.TbGESTraktanden_id)" />        
        <div>@Model.Typ</div>
        <div>@Model.GeschaefstTitel</div>
        <div>@Model.Traktand.Titel</div>
    </div>
    <div class="col-md-2" style="text-align:right">
        @if (Model.PreviousId.HasValue)
        {
            <a href="~/Sitzungen/Traktandum/@(Model.PreviousId.Value)"><span style="font-size: 2em; margin-right: 20px" class="glyphicon glyphicon-circle-arrow-left"></span></a>
        }
        @if (Model.NextId.HasValue)
        {
            <a href="~/Sitzungen/Traktandum/@(Model.NextId.Value)"><span style="font-size: 2em" class="glyphicon glyphicon-circle-arrow-right"></span></a>
        }
    </div>
</div>

<div class="row" style="margin-top: 20px">
    <div class="col-md-@(Model.Beilagen.Count > 0 ? 8 : 12)">
        @if (Model.HatProtokoll)
        {
            @*<div class="text-primary">@Model.ProtokollTitle</div>*@
            <div class="text-primary">Sitzung: @Model.SitzungKurzBezeichnung, Traktanden Nr:  @Model.Traktand.Traktanden_NR, Beschluss Nr: @Model.Traktand.Beschluss_NR </div>
            <div class="form-group">
                @Html.DevExpress().HtmlEditor(settings =>
                    {
                        settings.Name = "myHtmlEditor";
                        settings.Width = new Unit(100, UnitType.Percentage);
                        settings.Height = new Unit(300, UnitType.Pixel);
                        settings.ToolbarMode = HtmlEditorToolbarMode.None;
                        settings.ActiveView = HtmlEditorView.Preview;
                        settings.Enabled = false;
                        settings.Html = Model.Html;
                        if (Model.CssFiles != null)
                        {
                            settings.CssFiles.Clear();
                            settings.CssFiles.AddRange(Model.CssFiles);
                        }
                        settings.ControlStyle.Paddings.PaddingTop = new Unit(0);
                        settings.ControlStyle.Paddings.PaddingLeft = new Unit(0);
                        settings.ControlStyle.Paddings.PaddingRight = new Unit(0);
                        settings.ControlStyle.Paddings.PaddingBottom = new Unit(0);
                        settings.Settings.AllowHtmlView = false;
                        settings.Settings.AllowDesignView = false;
                    }).GetHtml()
            </div>
        }
    </div>
    @if (Model.Beilagen.Count > 0)
    {
        <div class="col-md-4">
            <div class="table-bordered table-striped">
                <div class="text-info">Beilagen</div>
                <table class="table">
                    @foreach (Datei item in Model.Beilagen)
                    {
                        <tr data-id="@(item.Id)">
                           @* <td>@(item.DateiName.Length > 23 ? item.DateiName.Substring(0, 20) + "..." + Path.GetExtension(item.DateiName) : item.DateiName)</td>*@
                            <td>@(item.Titel.Length > 23 ? item.Titel.Substring(0, 20) + "..."  : item.Titel)</td>
                            <td><a class="downloadDatei" href="#"><div class="glyphicon glyphicon-download-alt"></div></a></td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    }
</div>

<form role="form">

@*kommentar block*@
    <div class="row">
        <div class="col-md-12">
            <div class="table-bordered table-striped" style="margin-top: 20px">
                <div id="kommentarHead" class="text-info titel" style="cursor:pointer">Kommentarliste</div>
                <table id="kommentarTable" class="table">
                    <tr>
                        <th>Datum</th>
                        <th>Benutzer</th>
                        <th>Kommentar</th>
                        <th>Vertraulich</th>
                        <th>Status</th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.KommentarListe  )
                    {
                        <tr>
                            <td>@Html.NullableDate(item.StellungNahmeDatum)</td>
                            <td>@Html.DisplayFor(modelItem => item.StellungNahmeUser)</td>
                            <td>@Html.DisplayFor(modelItem => item.Kommentar)</td>
                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                            <td style="text-align:right">
                                <a id="btnEdit" href="#">Bearbeiten</a>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12" style="width:100%; margin-top: 20px;float:right; text-align: right">
            <div id="commentNew" class="btn btn-default">Neue Bemerkung</div>
            <a href="~/Sitzungen/Sitzung/@(Model.Traktand.TbGESSitzung_id)" class="btn btn-default">Zurück</a>
        </div>
    </div>
</form>

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "pcModalMode";
        settings.Width = 100;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        //settings.CloseOnEscape = true;
        settings.PopupAnimationType = AnimationType.Slide;
        settings.HeaderText = "Bemerkung";
        settings.Modal = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SetContent(() =>
        {
            using (Html.BeginForm("ModalMode", "PopupControl", FormMethod.Post,
                new { id = "popupForm", @class = "edit_form", @style = "width: 400px" }))
            {
                // TODO: _VD_
                // ViewContext.Writer.Write("<form action='"+_VD_+ "/PopupControl/ModalMode' method='POST' id='popupForm' class='edit_form' style='width: 400px'>");
                ViewContext.Writer.Write("<div class=\"formLabel\">");
                ViewContext.Writer.Write("Datum");
                ViewContext.Writer.Write("</div><div class=\"line\">");
                Html.DevExpress().DateEdit(dateEditsettings =>
                {
                    dateEditsettings.Name = "commentDatum";
                    dateEditsettings.Properties.DisplayFormatString = "dd.MM.yyyy";
                    dateEditsettings.Properties.EditFormatString = "dd.MM.yyyy";
                    dateEditsettings.Date = Model.StellungnahmeDatum;
                }).Render();
                ViewContext.Writer.Write("</div><div class=\"formLabel\">");
                ViewContext.Writer.Write("Status");
                ViewContext.Writer.Write("</div><div class=\"line\">");
                ViewContext.Writer.Write(Html.DropDownList("commentStatus", Model.KommentarCdList, new { @class = "form-control" }));
                ViewContext.Writer.Write("</div><div class=\"formLabel\">");
                ViewContext.Writer.Write("Bemerkung");
                ViewContext.Writer.Write("</div><div class=\"line\">");
                ViewContext.Writer.Write("<textarea class=\"form-control\" rows =\"5\" id =\"commentText\" style =\"min-width:100% !important\"></textarea>");
                ViewContext.Writer.Write("</div><div class=\"line\">");
                ViewContext.Writer.Write("<input type=\"checkbox\" id=\"commentVertraulich\" /> Vertraulich");
                ViewContext.Writer.Write("</div><div class=\"line\" style=\"text-align:right\">");
                Html.DevExpress().Button(buttonSettings =>
                {
                    buttonSettings.Name = "btnUpdate";
                    buttonSettings.ControlStyle.CssClass = "button";
                    buttonSettings.Width = 80;
                    buttonSettings.Text = "Speichern";
                    //buttonSettings.UseSubmitBehavior = true;
                    buttonSettings.ClientSideEvents.Click = "function(s, e){ alert(\"save\"); pcModalMode.Hide(); }";
                }).Render();
                Html.DevExpress().Button(buttonSettings =>
                {
                    buttonSettings.Name = "btnCancel";
                    buttonSettings.ControlStyle.CssClass = "button";
                    buttonSettings.Width = 80;
                    buttonSettings.Text = "Abbrechen";
                    buttonSettings.ClientSideEvents.Click = "function(s, e){ pcModalMode.Hide(); }";
                }).Render();
                ViewContext.Writer.Write("</div><b class=\"Clear\"></b>");
            }
        });

        settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()

@section styles {
    @Styles.Render("~/Content/toastr")
    <style>
        div.titel {
            font-size: 1.2em;
            font-weight: bold;
            margin-left: 10px;
            margin-top: 5px;
            margin-bottom: 8px;
        }
        .formLabel {
            margin-top: 15px;
            margin-bottom: 5px;
        }
        #btnCancel,#btnUpdate {
            margin-left: 10px;
            margin-top: 15px;
            margin-bottom: 10px;
        }        
    </style>
}

@section scripts {
    <script type="text/javascript" src="~/Scripts/Behoerdenloesung/Sitzungen/Traktandum.js"></script>
    <script type="text/javascript" src="~/Scripts/toastr.js"></script>
    <script type="text/javascript">
    $(function () {
        $('#commentText').val("@Model.Bemerkung");
        $('#commentNew').click(function () {
            pcModalMode.Show();
        });
        $('#btnEdit').click(function () {
            alert('edit comment');
        });
    });
    </script>
    @*<script type="text/html" id="item-template">
            <a href="#" data-id="" class="list-group-item dialog-item"
               data-bind="text: Description, attr: { 'data-id': TraktandId }"></a>
        </script>*@
}


@section navbarex
{
    <ul class="nav navbar-nav">
        <li>@Html.ActionLink("Sitzungen", "Home", "Sitzungen")</li>
        <li>@Html.ActionLink("Sitzung", "Sitzung", "Sitzungen", new { id = Model.Traktand.TbGESSitzung_id }, null)</li>
    </ul>
}
